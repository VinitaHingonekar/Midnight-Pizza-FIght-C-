using System;

class Program {
    static void Main() {
        Game game = new Game();
        game.GameLoop();
    }
}

class Player 
{
    // Player Variables
    private int health = 100;
    private int attackDamage = 20;
    private int healingCapacity = 15;
    private int maxHealth = 100;

    // Getter and Setter Property for Player Health
    public int Health
    {
        get
        {
            return health;
        }

        private set 
        {
            if(value < 0)
                health = 0;
            else if(value > maxHealth)
            {
                health = maxHealth;
            }
            else
            {
                health = value;
            } 
        }
    }

    // Player Contructor
    public Player()
    {
        SpawnPlayer();
        DisplayPlayerStats();
    }

    // Function to print Spawn message
    private void SpawnPlayer()
    {
        Console.WriteLine("\n==================================================");
        Console.WriteLine(" üçï DOUGH MASTER: GUARDIAN OF THE GOLDEN CRUST üçï ");
        Console.WriteLine("==================================================\n");
        Console.WriteLine("Dough Master: That scoundrel won't escape with my creation!");
    }

    private int generateRandomNumberInRange(int min, int max)
    {
        Random rand = new Random();
        int randomNumber = rand.Next(min, max+1);
        return randomNumber;
    }

    public int CalculateTotalDamage()
    {
        int damageToAdd = generateRandomNumberInRange(5, 15);
        int totalDamage = attackDamage + damageToAdd;
        return totalDamage;
    }

    public void ShowAttackDamage(int totalDamage)
    {
        Console.WriteLine("===================================");
        Console.WriteLine("\t\tüçï PIZZA BATTLE üçï");
        Console.WriteLine("===================================");
        Console.WriteLine("Dough Master's attack dealt " + totalDamage + " damage! ü•ä");
        Console.WriteLine("------------------------------------------------------------");
    }

    public void TakeDamage(int damageRecieved) => Health -= damageRecieved;

    public void Heal(int healAmount) => Health += healAmount;

    public int CalculateTotalHeal()
    {
        int healToAdd = generateRandomNumberInRange(10, 20);
        int totalHeal = healingCapacity + healToAdd;
        return totalHeal;
    }

    public void ShowHeal(int healAmount)
    {
        if (health > maxHealth)
        {
            Console.WriteLine("===================================");
            Console.WriteLine("\t\tüçï PIZZA BATTLE üçï");
            Console.WriteLine("===================================");
            Console.WriteLine("     Dough Master is bursting with energy! üöÄ    ");
            Console.WriteLine("------------------------------------------------------------");

        }
        else
        {
            Console.WriteLine("===================================");
            Console.WriteLine("\t\t\tüçï PIZZA BATTLE üçï");
            Console.WriteLine("===================================");
            Console.WriteLine("Dough Master's heal restored " + healAmount + " hp! ‚òï");
            Console.WriteLine("------------------------------------------------------------");
        }
    }

    public void DisplayPlayerStats()
    {
        Console.WriteLine("------------------------------------------------------------");
        Console.WriteLine("\t\t\tüçï DOUGH MASTER'S STATS üçï"); 
        Console.WriteLine("------------------------------------------------------------");
        Console.WriteLine("Health: " + health +"/"+ maxHealth);
        Console.WriteLine("Dough Slapper : " + attackDamage);
        Console.WriteLine("Espresso Shot ‚òï: " + healingCapacity);
        Console.WriteLine("Dough Slapper Boost üå™Ô∏è: 5 to 15");
        Console.WriteLine("Espresso Shot Boost ‚òï: 10 to 20");
    }

    ~Player()
    {
        Console.WriteLine("Player finalizer called, cleaning up resources.");
    }

}

class Enemy
{
    private int health = 150;
    private int maxHealth = 150;
    private int attackDamage = 15;

    public int Health
    {
        get
        {
            return health;
        }

        private set
        {
            if(value < 0)
                health = 0;
            else if(value > maxHealth)
                health = maxHealth;
            else 
                health = value;
        }
    }

    public Enemy()
    {
        SpawnEnemy();
        DisplayEnemyStats();
    }

    private void SpawnEnemy()
    {
        Console.WriteLine("\n==================================================");
        Console.WriteLine(" ü¶π CRUST BANDIT: NEMESIS OF ITALIAN CUISINE ü¶π ");
        Console.WriteLine("==================================================\n");
        Console.WriteLine("Crust Bandit : You'll never catch me, flour face!\n");
    }

    private int generateRandomNumberInRange(int min, int max)
    {
        Random rand = new Random();
        int randomNumber = rand.Next(min, max+1);
        return randomNumber;
    }

    public void TakeDamage(int damageRecieved) => Health -= damageRecieved;

    public int CalculateTotalDamage()
    {
        int damageToAdd = generateRandomNumberInRange(3, 12);
        int totalDamage = attackDamage + damageToAdd;
        return totalDamage;
    }

    public void ShowAttackDamage(int totalDamage)
    {
        Console.WriteLine("Crust Bandit's attack dealt " + totalDamage + " damage! ü•ä");
        Console.WriteLine("------------------------------------------------------------");
    }
    public void DisplayEnemyStats()
    {
        Console.WriteLine("------------------------------------------------------------");
        Console.WriteLine("\t\t\tüçï CRSUT BANDIT'S STATS üçï                   "); 
        Console.WriteLine("------------------------------------------------------------");
        Console.WriteLine("Health: " + health +"/"+ maxHealth);
        Console.WriteLine("Sneaky Jab üí™ : " + attackDamage);
        Console.WriteLine("Sneaky Jab Boost üå™Ô∏è: 3 to 12");
    }

    ~Enemy()
    {
        Console.WriteLine("Enemy finalizer called, cleaning up resources.");
    }
}

class Game
{
    Player player; 
	Enemy enemy; 
    bool isGameExited;

    public void GameLoop()
    {
        while(!isGameExited)
        {
            DisplayGameStory();
            StartMenu();
            if(!isGameExited)
                RestartMenu();
        }
    }

    private void StartMenu()
    {
        Console.WriteLine("\n===================================");
        Console.WriteLine("Press S to Get Your Masterpiece BACK...");
        Console.WriteLine("Press any other key to exit the game");
        Console.WriteLine("===================================\n");
        ProcessStartMenuInput();
    }     

    private void ProcessStartMenuInput()
    {
        string startGame = GetInput();

        if(startGame == "S")
        {
            Console.Clear();
            SpawnCharacters();
            ProcessBattleLoop();
        }
        else
        {
            ExitGame();
        }
    }

    private void ExitGame()
    {
        Console.Clear();
        Console.WriteLine("Thanks for playing Midnight Pizza Fight!üòÑ");
        isGameExited = true;
    }

    private void RestartMenu()
    {
        Console.WriteLine("\n===================================");
        Console.WriteLine("Press R to Restart... ");
        Console.WriteLine("Press any other key to exit the game");
        Console.WriteLine("===================================\n");

        ProcessRestartMenuInput();
    }

    private void ProcessRestartMenuInput()
    {
        string restartGame = GetInput();
        if(restartGame == "R")
            isGameExited = false;
        else
            ExitGame();
    }

    private void SpawnCharacters()
    {
        player = new Player();
        enemy = new Enemy();
    }

    private void DisplayGameStory()
    {
        Console.Clear();
        Console.WriteLine("\n===================================");
        Console.WriteLine("\t\tüçïMIDNIGHT PIZZA FIGHTüçï");
        Console.WriteLine("===================================");
        Console.WriteLine("In a bustling pizzeria on a busy Friday night...");
        Console.WriteLine("------------------------------------------------------------");
        Console.WriteLine("You, the Dough Master, created your magnum opus - \nthe perfect pizzaü§å. Suddenly, a sneaky Crust Bandit \nsnatches your masterpiece!");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("Fuelled by the passion for your craft, you give chase...");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("Through winding alleys and crowded streets, you \npursue the pizza pilferer. Finally, the thief is \ncornered in a dead-end alley. It's time to recover \nyour stolen slice!");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("\t\t\t\t\tFIGHT!");
    }

    private void ProcessBattleLoop()
    {
        do
        {
            ShowBattleOptions();
            ProcessBattleInput();
        }while(AreCharactersAlive());
    }

    private void ShowBattleOptions()
    {
        Console.WriteLine("===================================");
        Console.WriteLine("\t\tüçï PIZZA BATTLE OPTIONS üçï");
        Console.WriteLine("===================================");
        Console.WriteLine("Choose your action:");
        Console.WriteLine("\t[A] Attack the Crust Bandit ü•ä");
        Console.WriteLine("\t[H] Gulp an Espresso Shot ‚òï");
        Console.WriteLine("===================================");
        Console.Write("Your Choice : ");
    }

    private void ProcessBattleInput()
    {
        string playerChoice = GetInput();
        Console.Clear();

        switch(playerChoice)
        {
            case "A":
                PlayerAttack();

                if(CheckGameOver())
                    break;

                EnemyAttack();

                if(CheckGameOver())
                    break;

                DisplaycharacterStats();
                
                break;

            case "H":
                PlayerHeal();
                EnemyAttack();

                if(CheckGameOver())
                    break;

                DisplaycharacterStats();
                break;

            default:
                InvalidInput();
                break;
        }
    }

    private string GetInput()
    {
        string input = Console.ReadLine();
        return input.ToUpper();
    }

    private void InvalidInput() => Console.WriteLine("Invalid Input! , please give a valid input.");

    private void PlayerAttack()
    {
        int totalDamage = player.CalculateTotalDamage();
        enemy.TakeDamage(totalDamage);
        player.ShowAttackDamage(totalDamage);
    }

    private void PlayerHeal()
    {
        int totalHeal = player.CalculateTotalHeal();
        player.Heal(totalHeal);
        player.ShowHeal(totalHeal);
    }

    private void EnemyAttack()
    {
        int totalDamage = enemy.CalculateTotalDamage();
        player.TakeDamage(totalDamage);
        enemy.ShowAttackDamage(totalDamage);
    }

    private void DisplaycharacterStats()
    {
        player.DisplayPlayerStats();
        enemy.DisplayEnemyStats();
    }

    private bool AreCharactersAlive() => player.Health > 0 && enemy.Health > 0;

    private bool CheckGameOver()
    {
        if(enemy.Health <= 0)
        {
            ShowGameWin();
            return true;
        }
        else if(player.Health <= 0)
        {
            ShowGameLose();
            return true;
        }
        return false;
    }

    private void ShowGameWin()
    {
        Console.Clear();
        Console.WriteLine("===================================");
        Console.WriteLine("\t\t\tüéâ PIZZA JUSTICE SERVED! üéâ ");
        Console.WriteLine("===================================");
        Console.WriteLine("The Dough Master has defeated the Crust Bandit!");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("The perfect pizza has been reclaimed üçï");
        Console.WriteLine("The honor of Italian cuisine is restored!  ");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("Bon app√©tit, and thanks for playing! üë®‚Äçüç≥");
        Console.WriteLine("===================================");
    }

    private void ShowGameLose()
    {
        Console.Clear();
        Console.WriteLine("===================================");
        Console.WriteLine("\t\t\tüò≠ PIZZA TRAGEDY! üò≠ ");
        Console.WriteLine("===================================");
        Console.WriteLine("The Dough Master has been outmaneuvered!   ");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("The Crust Bandit escapes with your masterpiece üèÉ‚Äç‚ôÇÔ∏è");
        Console.WriteLine("Your pizzeria's reputation is in shambles üìâ ");
        Console.WriteLine("-----------------------------------------------------------");
        Console.WriteLine("Thanks for your valiant effort! üéñÔ∏è ");
        Console.WriteLine("Perhaps it's time to switch to calzones... ü•ü ");
        Console.WriteLine("===================================");
    }
}
